stages:
  - test
  - build_static_assets
  - build_docker_image
  - deploy

variables:
  CONTAINER_IMAGE: ${CI_REGISTRY_IMAGE}:latest

.js:
  image: node
  before_script:
    - node --version
    - npm --version
    - yarn --version
    - yarn

test:
  only:
    refs:
      - master
  extends: .js
  stage: test
  script:
    - yarn test

build_static_assets:
  only:
    refs:
      - master
  extends: .js
  stage: build_static_assets
  script:
    - yarn build:prod
  artifacts:
    paths:
      - build/

build_docker_image:
  only:
    refs:
      - master
  stage: build_docker_image
  image: docker:latest
  tags:
    - dind
  services:
    - docker:dind
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - docker --version
    - echo ${CONTAINER_IMAGE}
  script:
    - docker build -t ${CONTAINER_IMAGE} --no-cache .
    - docker image ls
    - docker push ${CONTAINER_IMAGE}
    - docker rmi ${CONTAINER_IMAGE}
    - docker logout "$CI_REGISTRY"

deploy:
  only:
    refs:
      - master
  stage: deploy
  image: alpine
  script:
    - apk add --no-cache curl git
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin/kubectl
    - git clone https://k8s-config-token:${K8S_CONFIG_TOKEN}@gitlab.ebi.ac.uk/dlrice/k8s-config
    - mkdir ~/.kube
    - cp k8s-config/config ~/.kube/
    - kubectl config use-context uniprot-admin-hx-wp-webadmin-02
    - kubectl config set-context --current --namespace=uniprot-front-end
    - 'printf "$(kubectl create secret docker-registry gitlab-registry --docker-server=$CI_REGISTRY --docker-username=$CI_DEPLOY_USER --docker-password=$CI_DEPLOY_PASSWORD --docker-email=$GITLAB_USER_EMAIL -o yaml --dry-run=client)" | kubectl apply -f -'
    - kubectl get secrets gitlab-registry -o yaml
    - kubectl apply -f k8s_deploy.yml
    - kubectl rollout restart deployment/uniprot-website-client
    - kubectl get nodes
