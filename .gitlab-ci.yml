stages:
  - test
  - build_static_assets
  - build_docker_image
  - deploy
  - lighthouse

variables:
  CONTAINER_IMAGE: ${CI_REGISTRY_IMAGE}:latest

.js:
  image: node
  before_script:
    - git --version
    - node --version
    - npm --version
    - yarn --version
    - yarn

test:
  image: buildkite/puppeteer
  stage: test
  before_script:
    - apt-get update && apt-get install -y git
    - git --version
    - node --version
    - npm --version
    - yarn --version
    - yarn
  script:
    - yarn test

build_static_assets:
  only:
    refs:
      - main
  extends: .js
  stage: build_static_assets
  script:
    - yarn build:prod
  artifacts:
    paths:
      - build/

build_docker_image:
  only:
    refs:
      - main
  stage: build_docker_image
  image: docker:latest
  tags:
    - dind
  services:
    - docker:dind
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - docker --version
    - echo ${CONTAINER_IMAGE}
  script:
    - docker build -t ${CONTAINER_IMAGE} --no-cache .
    - docker image ls
    - docker push ${CONTAINER_IMAGE}
    - docker rmi ${CONTAINER_IMAGE}
    - docker logout "$CI_REGISTRY"

.kubectl:
  image: alpine
  before_script:
    - apk add --no-cache curl git bash
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin/kubectl

deploy:
  only:
    refs:
      - main
  stage: deploy
  extends: .kubectl
  script:
    - ./deploy/deploy.sh HX # fallback
    - ./deploy/deploy.sh HH # main

deploy-fallback-only:
  only:
    refs:
      - deploy-fallback-only
  stage: deploy
  extends: .kubectl
  script:
    - ./deploy/deploy.sh HX # fallback

lightouse:
  image: cypress/browsers:node14.15.0-chrome86-ff82
  only:
    refs:
      - main
  stage: lighthouse
  before_script:
    - git --version
    - node --version
    - npm --version
    - yarn --version
    - yarn
  script:
    # Could we use the artifacts from before instead of rebuilding?
    - yarn build:prod
    - yarn test:lighthouse --collect.numberOfRuns=5 --collect.settings.chromeFlags="--no-sandbox" || echo "LHCI failed!"
