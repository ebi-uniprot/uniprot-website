@import 'franklin-sites/src/styles/mixins';
@import 'franklin-sites/src/styles/settings';
@import 'franklin-sites/src/styles/colours';

.conditions-annotations {
  margin-bottom: $global-margin;

  &.has-extra {
    position: relative;

    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      bottom: 0;
      width: 1ch;
      background-color: $colour-sapphire-blue;
    }
  }
}

.rule {
  display: grid;
  grid-template-columns: repeat(12, minmax(0, 1fr));
  gap: $global-margin;

  :global(.decorated-list-item__content) {
    // Make it grow so that the floating exception button can go on the right
    flex-grow: 1;
    // avoid having the rhea component overflow, just make it scrollable
    overflow-x: auto;
  }

  .extra & {
    margin-bottom: $global-margin;
  }
}

.conditions {
  grid-column: 1 / span 12;

  @include fs-breakpoints('large') {
    grid-column: 1 / span 5;
  }

  .extra & {
    grid-column: 2 / span 11;

    @include fs-breakpoints('large') {
      grid-column: 2 / span 4;
    }
  }

  // Overriding <ul> bottom margin
  margin-bottom: 0;

  & > li {
    border-color: $colour-sapphire-blue;
    border-style: solid;
    border-width: 0 0 1em 1ch;

    .extra & {
      border-color: $colour-sea-blue;
    }
  }

  & .statement {
    background-color: $colour-sapphire-blue;

    &::before {
      background-color: $colour-sapphire-blue;
    }
  }

  .extra & {
    & .statement {
      background-color: $colour-sea-blue;

      &::before {
        background-color: $colour-sea-blue;
      }
    }
  }

  position: relative;

  // Bottom triangle
  &::after {
    content: '';
    position: absolute;
    bottom: -($global-margin);
    // 1 column of of the grid + 1 border width
    left: calc((100% / 12) + 1ch);
    width: 0;
    height: 0;
    border-left: 0.8em solid transparent;
    border-right: 0.8em solid transparent;
    border-top: $global-margin solid $colour-sapphire-blue;

    .extra & {
      border-top-color: $colour-sea-blue;
    }

    @include fs-breakpoints('large') {
      content: none;
    }
  }
}

.annotations {
  grid-column: 2 / span 11;

  @include fs-breakpoints('large') {
    grid-column: 6 / span 7;
  }

  .extra & {
    grid-column: 3 / span 10;

    @include fs-breakpoints('large') {
      grid-column: 6 / span 7;
    }
  }

  border-color: $colour-weldon-blue;
  border-style: solid;
  border-width: 0 0 1em 1ch;

  & .statement {
    background-color: $colour-weldon-blue;

    &::before {
      background-color: $colour-weldon-blue;
    }
  }
}

.exceptions {
  float: right;

  // Expection's next element (the content of the tag), any list item within
  & ~ * li:not(:last-child) {
    margin-bottom: $global-margin;
  }
}

.statement {
  background-color: $colour-sapphire-blue;
  color: white;
  padding: 0 1px;
  text-transform: uppercase;
  font-weight: bold;
  position: relative;
  z-index: 0;

  // Depending on the browser width, there might be a 1-pixel white gap
  // So, hacky way to connect the left border to the background of the statement
  &:not(.or):not(.negation)::before {
    content: '';
    position: absolute;
    left: -1ch;
    top: 0;
    bottom: 0;
    width: 2ch;
    z-index: -1;
  }
}

.negation {
  padding: 0.5ch;
  border-radius: 1ch;
}

.or {
  display: inline-block;
  border-radius: 50%;
  padding: 0.75ch 1ch;
  transform: translateX(calc(-50% - 0.5ch));
  margin: 1ch 0;
}

.if {
  position: relative;

  // Right triangle
  &::after {
    content: none;
    position: absolute;
    right: -($global-margin);
    top: 0;
    width: 0;
    height: 0;
    border-top: 0.8em solid transparent;
    border-bottom: 0.8em solid transparent;
    border-left: $global-margin solid $colour-sapphire-blue;

    .extra & {
      border-left-color: $colour-sea-blue;
    }

    @include fs-breakpoints('large') {
      content: '';
    }
  }
}

// "Additionally" text
.extra {
  position: relative;
  margin-top: $global-margin;
  border-bottom: $global-margin solid $colour-sea-blue;

  &::before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    width: 1ch;
    background-color: $colour-sea-blue;
  }

  & > .statement {
    background-color: $colour-sea-blue;
    padding-left: 1ch;
    margin-bottom: $global-margin;
  }
}
